//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("AuditModel", "FK_EntityEntityAttribute", "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Silverbear.Enterprise.Audit.BusinessRules.DataAccess.Entity), "Attribute", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Silverbear.Enterprise.Audit.BusinessRules.DataAccess.Attribute))]
[assembly: EdmRelationshipAttribute("AuditModel", "FK_OrganisationEntity", "Organisation", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Silverbear.Enterprise.Audit.BusinessRules.DataAccess.Organisation), "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Silverbear.Enterprise.Audit.BusinessRules.DataAccess.Entity))]
[assembly: EdmRelationshipAttribute("AuditModel", "EntityTag", "Entity", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Silverbear.Enterprise.Audit.BusinessRules.DataAccess.Entity), "Tag", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Silverbear.Enterprise.Audit.BusinessRules.DataAccess.Tag))]
[assembly: EdmRelationshipAttribute("AuditModel", "FK_AuditLevelAudit", "AuditLevel", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Silverbear.Enterprise.Audit.BusinessRules.DataAccess.AuditLevel), "Audit", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Silverbear.Enterprise.Audit.BusinessRules.DataAccess.Audit))]

#endregion

namespace Silverbear.Enterprise.Audit.BusinessRules.DataAccess
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AuditEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AuditEntities object using the connection string found in the 'AuditEntities' section of the application configuration file.
        /// </summary>
        public AuditEntities() : base("name=AuditEntities", "AuditEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AuditEntities object.
        /// </summary>
        public AuditEntities(string connectionString) : base(connectionString, "AuditEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AuditEntities object.
        /// </summary>
        public AuditEntities(EntityConnection connection) : base(connection, "AuditEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Attribute> Attribute
        {
            get
            {
                if ((_Attribute == null))
                {
                    _Attribute = base.CreateObjectSet<Attribute>("Attribute");
                }
                return _Attribute;
            }
        }
        private ObjectSet<Attribute> _Attribute;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Entity> Entity
        {
            get
            {
                if ((_Entity == null))
                {
                    _Entity = base.CreateObjectSet<Entity>("Entity");
                }
                return _Entity;
            }
        }
        private ObjectSet<Entity> _Entity;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Organisation> Organisation
        {
            get
            {
                if ((_Organisation == null))
                {
                    _Organisation = base.CreateObjectSet<Organisation>("Organisation");
                }
                return _Organisation;
            }
        }
        private ObjectSet<Organisation> _Organisation;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tag> Tag
        {
            get
            {
                if ((_Tag == null))
                {
                    _Tag = base.CreateObjectSet<Tag>("Tag");
                }
                return _Tag;
            }
        }
        private ObjectSet<Tag> _Tag;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AuditLevel> AuditLevel
        {
            get
            {
                if ((_AuditLevel == null))
                {
                    _AuditLevel = base.CreateObjectSet<AuditLevel>("AuditLevel");
                }
                return _AuditLevel;
            }
        }
        private ObjectSet<AuditLevel> _AuditLevel;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Attribute EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAttribute(Attribute attribute)
        {
            base.AddObject("Attribute", attribute);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Entity EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntity(Entity entity)
        {
            base.AddObject("Entity", entity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Organisation EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrganisation(Organisation organisation)
        {
            base.AddObject("Organisation", organisation);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tag EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTag(Tag tag)
        {
            base.AddObject("Tag", tag);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AuditLevel EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAuditLevel(AuditLevel auditLevel)
        {
            base.AddObject("AuditLevel", auditLevel);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AuditModel", Name="Attribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(BinaryAttribute))]
    [KnownTypeAttribute(typeof(StringAttribute))]
    public partial class Attribute : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Attribute object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Attribute CreateAttribute(global::System.Int32 id, global::System.String key, global::System.DateTime dateCreated)
        {
            Attribute attribute = new Attribute();
            attribute.Id = id;
            attribute.Key = key;
            attribute.DateCreated = dateCreated;
            return attribute;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Key
        {
            get
            {
                return _Key;
            }
            set
            {
                OnKeyChanging(value);
                ReportPropertyChanging("Key");
                _Key = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Key");
                OnKeyChanged();
            }
        }
        private global::System.String _Key;
        partial void OnKeyChanging(global::System.String value);
        partial void OnKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateDeleted
        {
            get
            {
                return _DateDeleted;
            }
            set
            {
                OnDateDeletedChanging(value);
                ReportPropertyChanging("DateDeleted");
                _DateDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDeleted");
                OnDateDeletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateDeleted;
        partial void OnDateDeletedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AuditModel", "FK_EntityEntityAttribute", "Entity")]
        public Entity Entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("AuditModel.FK_EntityEntityAttribute", "Entity").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("AuditModel.FK_EntityEntityAttribute", "Entity").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Entity> EntityReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Entity>("AuditModel.FK_EntityEntityAttribute", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Entity>("AuditModel.FK_EntityEntityAttribute", "Entity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AuditModel", Name="Audit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Audit : Entity
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Audit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Audit CreateAudit(global::System.Int32 id, global::System.DateTime dateCreated)
        {
            Audit audit = new Audit();
            audit.Id = id;
            audit.DateCreated = dateCreated;
            return audit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Application
        {
            get
            {
                return _Application;
            }
            set
            {
                OnApplicationChanging(value);
                ReportPropertyChanging("Application");
                _Application = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Application");
                OnApplicationChanged();
            }
        }
        private global::System.String _Application;
        partial void OnApplicationChanging(global::System.String value);
        partial void OnApplicationChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AuditModel", "FK_AuditLevelAudit", "AuditLevel")]
        public AuditLevel AuditLevel
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuditLevel>("AuditModel.FK_AuditLevelAudit", "AuditLevel").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuditLevel>("AuditModel.FK_AuditLevelAudit", "AuditLevel").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AuditLevel> AuditLevelReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AuditLevel>("AuditModel.FK_AuditLevelAudit", "AuditLevel");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AuditLevel>("AuditModel.FK_AuditLevelAudit", "AuditLevel", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AuditModel", Name="AuditLevel")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AuditLevel : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AuditLevel object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        /// <param name="level">Initial value of the Level property.</param>
        public static AuditLevel CreateAuditLevel(global::System.Int32 id, global::System.String description, global::System.Int32 level)
        {
            AuditLevel auditLevel = new AuditLevel();
            auditLevel.Id = id;
            auditLevel.Description = description;
            auditLevel.Level = level;
            return auditLevel;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Level
        {
            get
            {
                return _Level;
            }
            set
            {
                OnLevelChanging(value);
                ReportPropertyChanging("Level");
                _Level = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Level");
                OnLevelChanged();
            }
        }
        private global::System.Int32 _Level;
        partial void OnLevelChanging(global::System.Int32 value);
        partial void OnLevelChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AuditModel", "FK_AuditLevelAudit", "Audit")]
        public EntityCollection<Audit> Entity_Audit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Audit>("AuditModel.FK_AuditLevelAudit", "Audit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Audit>("AuditModel.FK_AuditLevelAudit", "Audit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AuditModel", Name="BinaryAttribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(FileAttribute))]
    public partial class BinaryAttribute : Attribute
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BinaryAttribute object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static BinaryAttribute CreateBinaryAttribute(global::System.Int32 id, global::System.String key, global::System.DateTime dateCreated, global::System.Byte[] value)
        {
            BinaryAttribute binaryAttribute = new BinaryAttribute();
            binaryAttribute.Id = id;
            binaryAttribute.Key = key;
            binaryAttribute.DateCreated = dateCreated;
            binaryAttribute.Value = value;
            return binaryAttribute;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Value
        {
            get
            {
                return StructuralObject.GetValidValue(_Value);
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.Byte[] _Value;
        partial void OnValueChanging(global::System.Byte[] value);
        partial void OnValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AuditModel", Name="Entity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(Audit))]
    public partial class Entity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Entity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Entity CreateEntity(global::System.Int32 id, global::System.DateTime dateCreated)
        {
            Entity entity = new Entity();
            entity.Id = id;
            entity.DateCreated = dateCreated;
            return entity;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateDeleted
        {
            get
            {
                return _DateDeleted;
            }
            set
            {
                OnDateDeletedChanging(value);
                ReportPropertyChanging("DateDeleted");
                _DateDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDeleted");
                OnDateDeletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateDeleted;
        partial void OnDateDeletedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AuditModel", "FK_EntityEntityAttribute", "Attribute")]
        public EntityCollection<Attribute> Attribute
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Attribute>("AuditModel.FK_EntityEntityAttribute", "Attribute");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Attribute>("AuditModel.FK_EntityEntityAttribute", "Attribute", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AuditModel", "FK_OrganisationEntity", "Organisation")]
        public Organisation Organisation
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("AuditModel.FK_OrganisationEntity", "Organisation").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("AuditModel.FK_OrganisationEntity", "Organisation").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Organisation> OrganisationReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Organisation>("AuditModel.FK_OrganisationEntity", "Organisation");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Organisation>("AuditModel.FK_OrganisationEntity", "Organisation", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AuditModel", "EntityTag", "Tag")]
        public EntityCollection<Tag> Tag
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Tag>("AuditModel.EntityTag", "Tag");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Tag>("AuditModel.EntityTag", "Tag", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AuditModel", Name="FileAttribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class FileAttribute : BinaryAttribute
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new FileAttribute object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        /// <param name="extension">Initial value of the Extension property.</param>
        /// <param name="fileName">Initial value of the FileName property.</param>
        public static FileAttribute CreateFileAttribute(global::System.Int32 id, global::System.String key, global::System.DateTime dateCreated, global::System.Byte[] value, global::System.String extension, global::System.String fileName)
        {
            FileAttribute fileAttribute = new FileAttribute();
            fileAttribute.Id = id;
            fileAttribute.Key = key;
            fileAttribute.DateCreated = dateCreated;
            fileAttribute.Value = value;
            fileAttribute.Extension = extension;
            fileAttribute.FileName = fileName;
            return fileAttribute;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Extension
        {
            get
            {
                return _Extension;
            }
            set
            {
                OnExtensionChanging(value);
                ReportPropertyChanging("Extension");
                _Extension = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Extension");
                OnExtensionChanged();
            }
        }
        private global::System.String _Extension;
        partial void OnExtensionChanging(global::System.String value);
        partial void OnExtensionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FileName
        {
            get
            {
                return _FileName;
            }
            set
            {
                OnFileNameChanging(value);
                ReportPropertyChanging("FileName");
                _FileName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FileName");
                OnFileNameChanged();
            }
        }
        private global::System.String _FileName;
        partial void OnFileNameChanging(global::System.String value);
        partial void OnFileNameChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AuditModel", Name="Organisation")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Organisation : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Organisation object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="organisationName">Initial value of the OrganisationName property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Organisation CreateOrganisation(global::System.Int32 id, global::System.String organisationName, global::System.DateTime dateCreated)
        {
            Organisation organisation = new Organisation();
            organisation.Id = id;
            organisation.OrganisationName = organisationName;
            organisation.DateCreated = dateCreated;
            return organisation;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String OrganisationName
        {
            get
            {
                return _OrganisationName;
            }
            set
            {
                OnOrganisationNameChanging(value);
                ReportPropertyChanging("OrganisationName");
                _OrganisationName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("OrganisationName");
                OnOrganisationNameChanged();
            }
        }
        private global::System.String _OrganisationName;
        partial void OnOrganisationNameChanging(global::System.String value);
        partial void OnOrganisationNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateDeleted
        {
            get
            {
                return _DateDeleted;
            }
            set
            {
                OnDateDeletedChanging(value);
                ReportPropertyChanging("DateDeleted");
                _DateDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDeleted");
                OnDateDeletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateDeleted;
        partial void OnDateDeletedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AuditModel", "FK_OrganisationEntity", "Entity")]
        public EntityCollection<Entity> Entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entity>("AuditModel.FK_OrganisationEntity", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entity>("AuditModel.FK_OrganisationEntity", "Entity", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AuditModel", Name="StringAttribute")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StringAttribute : Attribute
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new StringAttribute object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="key">Initial value of the Key property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        /// <param name="value">Initial value of the Value property.</param>
        public static StringAttribute CreateStringAttribute(global::System.Int32 id, global::System.String key, global::System.DateTime dateCreated, global::System.String value)
        {
            StringAttribute stringAttribute = new StringAttribute();
            stringAttribute.Id = id;
            stringAttribute.Key = key;
            stringAttribute.DateCreated = dateCreated;
            stringAttribute.Value = value;
            return stringAttribute;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Value
        {
            get
            {
                return _Value;
            }
            set
            {
                OnValueChanging(value);
                ReportPropertyChanging("Value");
                _Value = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Value");
                OnValueChanged();
            }
        }
        private global::System.String _Value;
        partial void OnValueChanging(global::System.String value);
        partial void OnValueChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="AuditModel", Name="Tag")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tag : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tag object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="tagName">Initial value of the TagName property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Tag CreateTag(global::System.Int32 id, global::System.String tagName, global::System.DateTime dateCreated)
        {
            Tag tag = new Tag();
            tag.Id = id;
            tag.TagName = tagName;
            tag.DateCreated = dateCreated;
            return tag;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String TagName
        {
            get
            {
                return _TagName;
            }
            set
            {
                OnTagNameChanging(value);
                ReportPropertyChanging("TagName");
                _TagName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("TagName");
                OnTagNameChanged();
            }
        }
        private global::System.String _TagName;
        partial void OnTagNameChanging(global::System.String value);
        partial void OnTagNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateDeleted
        {
            get
            {
                return _DateDeleted;
            }
            set
            {
                OnDateDeletedChanging(value);
                ReportPropertyChanging("DateDeleted");
                _DateDeleted = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateDeleted");
                OnDateDeletedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateDeleted;
        partial void OnDateDeletedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateDeletedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("AuditModel", "EntityTag", "Entity")]
        public EntityCollection<Entity> Entity
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Entity>("AuditModel.EntityTag", "Entity");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Entity>("AuditModel.EntityTag", "Entity", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
